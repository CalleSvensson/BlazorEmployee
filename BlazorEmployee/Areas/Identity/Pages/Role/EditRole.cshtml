@page "/Identity/Pages/Role/EditRole/{id}"

@model BlazorEmployee.Areas.Identity.Pages.Role.EditRoleModel

<h1> Edit role</h1>

<form method="post" class="mt-3">
    <input type="hidden" asp-for="@Model.roleToEdit.NormalizedName" />
    <input type="hidden" asp-for="@Model.roleToEdit.ConcurrencyStamp" />
    <input type="hidden" asp-for="@Model.roleToEdit.Id" />
    <div class="form-group row">
        <label asp-for="@Model.roleToEdit.Name" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="@Model.roleToEdit.Name" class="form-control" />
            <span asp-validation-for="@Model.roleToEdit.Name" class="text-danger"></span>
        </div>
    </div>

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group row">
        <div class="col-sm-10">
            <button type ="submit" class="btn btn-primary">Update</button>
            <a href="/Identity/Pages/Role/Roles" class="btn btn-primary">Cancel</a>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h3>Users in this role</h3>
        </div>
        <div class="card-body">
            @if (Model.usersInRole.Any())
            {
                foreach(var user in Model.usersInRole)
                {
                    <h5 class="card-title">@user.UserName</h5>
                }
            }
            else
            {
                <h5 class="card-title">No user in this role.</h5>

            }
        </div>
        <div class="card-footer">
            <a href="/Identity/Pages/Role/EditUserInRole/@Model.roleToEdit.Id" class="btn btn-primary" style="width:auto">Add or remove users</a>
        </div>
    </div>
</form>
@{
}
